'use strict';
const
    YartrResolve = require('./lib/yartrLinkResolve.js'),
    TelegramBot = require('./lib/TelegramBotBase.js'),
    YartrUtils = require('./lib/yartrUtils.js'),
    log = require('simple-node-logger').createSimpleFileLogger('project.log'),
    argvToken = '' + process.argv[2],
    coordsMap = require('./stations/stations.json');

class YartrBot extends TelegramBot.TelegramBotBase {
    constructor(token) {
        super(token);
        var self = this;
        self.bot.onText(/[a-z–∞-—è]/gim, function(msg, match) {
            log.info('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @', msg.from.first_name, ' ', msg.from.last_name, '. –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: ', '"', msg.text, '"')
            self.bot.sendMessage(msg.chat.id, 'üì° –û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ');
        });
    }
    onLocation(locationMsg) {
        let stationKey = YartrUtils.getNearestStationKey(locationMsg.location),
            stationLinks = coordsMap[stationKey].links,
        userLocationKeyboard = YartrUtils.generateLocationKeyboardOptions(stationLinks);

        log.info('–ü—Ä–∏—à–ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ—Ç @', locationMsg.from.first_name, ' ', locationMsg.from.last_name, '. –õ–æ–∫–∞—Ü–∏—è: ', '"', locationMsg.location, '"');
        this.sendMessage(locationMsg.chat.id, `–ë–ª–∏–∂–µ –≤—Å–µ–≥–æ: ${stationKey}.`, userLocationKeyboard);
    }
    onCallbackQuery(msg) {
        let msgId = msg.from.id,
            callbackParam = msg.data,
            url = `http://yartr.ru/rasp.php?vt=1&nmar=78&q=1&id=${callbackParam}&view=2`;

        this.answerCallbackQuery(msg.id, '–û–∫, –ø–æ–µ—Ö–∞–ª–∏!');
        log.info('–ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @', msg.from.first_name, ' ', msg.from.last_name, '. —Å—Å—ã–ª–∫–∞: ', '"', url, '"');
        YartrResolve.resolveLink(url, this, msgId, msg);
    }
}
const yarbot = new YartrBot(argvToken);